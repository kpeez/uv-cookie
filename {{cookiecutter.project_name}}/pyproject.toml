[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{cookiecutter.project_slug}}"
version = "0.0.1"
description = "{{cookiecutter.project_description}}"
authors = [{name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}"}]
readme = "README.md"
license = {file = "LICENSE"}
dependencies = [
  "pip",
  "uv",
  "numpy",
  "pandas",
  "pyarrow",
  "matplotlib",
  "seaborn",
  "notebook",
  "scikit-learn",
  {% if cookiecutter.create_models_directory == 'y' -%}
  "torch",
  {% endif -%}
]

[project.optional-dependencies]
dev = [
  "ruff",
  "mypy",
  "typing_extensions",
  "pytest",
  "pre-commit",
  "pandas-stubs",
  "ipykernel",
  "notebook",
  {% if cookiecutter.codecov == 'y' -%}
  "pytest-cov",
  {% endif -%}
  {% if cookiecutter.tox == 'y' -%}
  "tox",
  {% endif -%}
  {% if cookiecutter.mkdocs == 'y' -%}
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings[python]"
  {% endif -%}
]

[project.urls]
repository = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
documentation = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pylint
  "PL",
  # isort
  "I",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # flake8-comprehensions
  "C4",
  # ruff
  "RUF",
]
fixable = ["ALL"]
ignore = [
  # too many arguments
  "PLR0913",
  # magic number
  "PLR2004",
  # line too long
  "E501",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "D104"]

[tool.ruff.lint.pydocstyle]
convention = "google"

{% if cookiecutter.codecov == "y"-%}
[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_slug}}"]
{% endif%}

[tool.mypy]
files = ["{{cookiecutter.project_slug}}"]
plugins = "numpy.typing.mypy_plugin"
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
exclude = [
    '\.venv',
]